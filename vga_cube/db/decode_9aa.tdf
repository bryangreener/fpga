--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=29 LPM_WIDTH=5 data eq
--VERSION_BEGIN 20.1 cbx_cycloneii 2020:06:05:12:04:51:SJ cbx_lpm_add_sub 2020:06:05:12:04:51:SJ cbx_lpm_compare 2020:06:05:12:04:51:SJ cbx_lpm_decode 2020:06:05:12:04:51:SJ cbx_mgl 2020:06:05:12:11:10:SJ cbx_nadder 2020:06:05:12:04:51:SJ cbx_stratix 2020:06:05:12:04:51:SJ cbx_stratixii 2020:06:05:12:04:51:SJ  VERSION_END


-- Copyright (C) 2020  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_9aa
( 
	data[4..0]	:	input;
	eq[28..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[28..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1007w[3..0]	: WIRE;
	w_anode1017w[3..0]	: WIRE;
	w_anode1027w[3..0]	: WIRE;
	w_anode1037w[3..0]	: WIRE;
	w_anode1047w[3..0]	: WIRE;
	w_anode679w[2..0]	: WIRE;
	w_anode693w[3..0]	: WIRE;
	w_anode710w[3..0]	: WIRE;
	w_anode720w[3..0]	: WIRE;
	w_anode730w[3..0]	: WIRE;
	w_anode740w[3..0]	: WIRE;
	w_anode750w[3..0]	: WIRE;
	w_anode760w[3..0]	: WIRE;
	w_anode770w[3..0]	: WIRE;
	w_anode782w[2..0]	: WIRE;
	w_anode792w[3..0]	: WIRE;
	w_anode803w[3..0]	: WIRE;
	w_anode813w[3..0]	: WIRE;
	w_anode823w[3..0]	: WIRE;
	w_anode833w[3..0]	: WIRE;
	w_anode843w[3..0]	: WIRE;
	w_anode853w[3..0]	: WIRE;
	w_anode863w[3..0]	: WIRE;
	w_anode874w[2..0]	: WIRE;
	w_anode884w[3..0]	: WIRE;
	w_anode895w[3..0]	: WIRE;
	w_anode905w[3..0]	: WIRE;
	w_anode915w[3..0]	: WIRE;
	w_anode925w[3..0]	: WIRE;
	w_anode935w[3..0]	: WIRE;
	w_anode945w[3..0]	: WIRE;
	w_anode955w[3..0]	: WIRE;
	w_anode966w[2..0]	: WIRE;
	w_anode976w[3..0]	: WIRE;
	w_anode987w[3..0]	: WIRE;
	w_anode997w[3..0]	: WIRE;
	w_data677w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[28..0] = eq_wire[28..0];
	eq_wire[] = ( ( w_anode1047w[3..3], w_anode1037w[3..3], w_anode1027w[3..3], w_anode1017w[3..3], w_anode1007w[3..3], w_anode997w[3..3], w_anode987w[3..3], w_anode976w[3..3]), ( w_anode955w[3..3], w_anode945w[3..3], w_anode935w[3..3], w_anode925w[3..3], w_anode915w[3..3], w_anode905w[3..3], w_anode895w[3..3], w_anode884w[3..3]), ( w_anode863w[3..3], w_anode853w[3..3], w_anode843w[3..3], w_anode833w[3..3], w_anode823w[3..3], w_anode813w[3..3], w_anode803w[3..3], w_anode792w[3..3]), ( w_anode770w[3..3], w_anode760w[3..3], w_anode750w[3..3], w_anode740w[3..3], w_anode730w[3..3], w_anode720w[3..3], w_anode710w[3..3], w_anode693w[3..3]));
	w_anode1007w[] = ( (w_anode1007w[2..2] & (! w_data677w[2..2])), (w_anode1007w[1..1] & w_data677w[1..1]), (w_anode1007w[0..0] & w_data677w[0..0]), w_anode966w[2..2]);
	w_anode1017w[] = ( (w_anode1017w[2..2] & w_data677w[2..2]), (w_anode1017w[1..1] & (! w_data677w[1..1])), (w_anode1017w[0..0] & (! w_data677w[0..0])), w_anode966w[2..2]);
	w_anode1027w[] = ( (w_anode1027w[2..2] & w_data677w[2..2]), (w_anode1027w[1..1] & (! w_data677w[1..1])), (w_anode1027w[0..0] & w_data677w[0..0]), w_anode966w[2..2]);
	w_anode1037w[] = ( (w_anode1037w[2..2] & w_data677w[2..2]), (w_anode1037w[1..1] & w_data677w[1..1]), (w_anode1037w[0..0] & (! w_data677w[0..0])), w_anode966w[2..2]);
	w_anode1047w[] = ( (w_anode1047w[2..2] & w_data677w[2..2]), (w_anode1047w[1..1] & w_data677w[1..1]), (w_anode1047w[0..0] & w_data677w[0..0]), w_anode966w[2..2]);
	w_anode679w[] = ( (w_anode679w[1..1] & (! data_wire[4..4])), (w_anode679w[0..0] & (! data_wire[3..3])), B"1");
	w_anode693w[] = ( (w_anode693w[2..2] & (! w_data677w[2..2])), (w_anode693w[1..1] & (! w_data677w[1..1])), (w_anode693w[0..0] & (! w_data677w[0..0])), w_anode679w[2..2]);
	w_anode710w[] = ( (w_anode710w[2..2] & (! w_data677w[2..2])), (w_anode710w[1..1] & (! w_data677w[1..1])), (w_anode710w[0..0] & w_data677w[0..0]), w_anode679w[2..2]);
	w_anode720w[] = ( (w_anode720w[2..2] & (! w_data677w[2..2])), (w_anode720w[1..1] & w_data677w[1..1]), (w_anode720w[0..0] & (! w_data677w[0..0])), w_anode679w[2..2]);
	w_anode730w[] = ( (w_anode730w[2..2] & (! w_data677w[2..2])), (w_anode730w[1..1] & w_data677w[1..1]), (w_anode730w[0..0] & w_data677w[0..0]), w_anode679w[2..2]);
	w_anode740w[] = ( (w_anode740w[2..2] & w_data677w[2..2]), (w_anode740w[1..1] & (! w_data677w[1..1])), (w_anode740w[0..0] & (! w_data677w[0..0])), w_anode679w[2..2]);
	w_anode750w[] = ( (w_anode750w[2..2] & w_data677w[2..2]), (w_anode750w[1..1] & (! w_data677w[1..1])), (w_anode750w[0..0] & w_data677w[0..0]), w_anode679w[2..2]);
	w_anode760w[] = ( (w_anode760w[2..2] & w_data677w[2..2]), (w_anode760w[1..1] & w_data677w[1..1]), (w_anode760w[0..0] & (! w_data677w[0..0])), w_anode679w[2..2]);
	w_anode770w[] = ( (w_anode770w[2..2] & w_data677w[2..2]), (w_anode770w[1..1] & w_data677w[1..1]), (w_anode770w[0..0] & w_data677w[0..0]), w_anode679w[2..2]);
	w_anode782w[] = ( (w_anode782w[1..1] & (! data_wire[4..4])), (w_anode782w[0..0] & data_wire[3..3]), B"1");
	w_anode792w[] = ( (w_anode792w[2..2] & (! w_data677w[2..2])), (w_anode792w[1..1] & (! w_data677w[1..1])), (w_anode792w[0..0] & (! w_data677w[0..0])), w_anode782w[2..2]);
	w_anode803w[] = ( (w_anode803w[2..2] & (! w_data677w[2..2])), (w_anode803w[1..1] & (! w_data677w[1..1])), (w_anode803w[0..0] & w_data677w[0..0]), w_anode782w[2..2]);
	w_anode813w[] = ( (w_anode813w[2..2] & (! w_data677w[2..2])), (w_anode813w[1..1] & w_data677w[1..1]), (w_anode813w[0..0] & (! w_data677w[0..0])), w_anode782w[2..2]);
	w_anode823w[] = ( (w_anode823w[2..2] & (! w_data677w[2..2])), (w_anode823w[1..1] & w_data677w[1..1]), (w_anode823w[0..0] & w_data677w[0..0]), w_anode782w[2..2]);
	w_anode833w[] = ( (w_anode833w[2..2] & w_data677w[2..2]), (w_anode833w[1..1] & (! w_data677w[1..1])), (w_anode833w[0..0] & (! w_data677w[0..0])), w_anode782w[2..2]);
	w_anode843w[] = ( (w_anode843w[2..2] & w_data677w[2..2]), (w_anode843w[1..1] & (! w_data677w[1..1])), (w_anode843w[0..0] & w_data677w[0..0]), w_anode782w[2..2]);
	w_anode853w[] = ( (w_anode853w[2..2] & w_data677w[2..2]), (w_anode853w[1..1] & w_data677w[1..1]), (w_anode853w[0..0] & (! w_data677w[0..0])), w_anode782w[2..2]);
	w_anode863w[] = ( (w_anode863w[2..2] & w_data677w[2..2]), (w_anode863w[1..1] & w_data677w[1..1]), (w_anode863w[0..0] & w_data677w[0..0]), w_anode782w[2..2]);
	w_anode874w[] = ( (w_anode874w[1..1] & data_wire[4..4]), (w_anode874w[0..0] & (! data_wire[3..3])), B"1");
	w_anode884w[] = ( (w_anode884w[2..2] & (! w_data677w[2..2])), (w_anode884w[1..1] & (! w_data677w[1..1])), (w_anode884w[0..0] & (! w_data677w[0..0])), w_anode874w[2..2]);
	w_anode895w[] = ( (w_anode895w[2..2] & (! w_data677w[2..2])), (w_anode895w[1..1] & (! w_data677w[1..1])), (w_anode895w[0..0] & w_data677w[0..0]), w_anode874w[2..2]);
	w_anode905w[] = ( (w_anode905w[2..2] & (! w_data677w[2..2])), (w_anode905w[1..1] & w_data677w[1..1]), (w_anode905w[0..0] & (! w_data677w[0..0])), w_anode874w[2..2]);
	w_anode915w[] = ( (w_anode915w[2..2] & (! w_data677w[2..2])), (w_anode915w[1..1] & w_data677w[1..1]), (w_anode915w[0..0] & w_data677w[0..0]), w_anode874w[2..2]);
	w_anode925w[] = ( (w_anode925w[2..2] & w_data677w[2..2]), (w_anode925w[1..1] & (! w_data677w[1..1])), (w_anode925w[0..0] & (! w_data677w[0..0])), w_anode874w[2..2]);
	w_anode935w[] = ( (w_anode935w[2..2] & w_data677w[2..2]), (w_anode935w[1..1] & (! w_data677w[1..1])), (w_anode935w[0..0] & w_data677w[0..0]), w_anode874w[2..2]);
	w_anode945w[] = ( (w_anode945w[2..2] & w_data677w[2..2]), (w_anode945w[1..1] & w_data677w[1..1]), (w_anode945w[0..0] & (! w_data677w[0..0])), w_anode874w[2..2]);
	w_anode955w[] = ( (w_anode955w[2..2] & w_data677w[2..2]), (w_anode955w[1..1] & w_data677w[1..1]), (w_anode955w[0..0] & w_data677w[0..0]), w_anode874w[2..2]);
	w_anode966w[] = ( (w_anode966w[1..1] & data_wire[4..4]), (w_anode966w[0..0] & data_wire[3..3]), B"1");
	w_anode976w[] = ( (w_anode976w[2..2] & (! w_data677w[2..2])), (w_anode976w[1..1] & (! w_data677w[1..1])), (w_anode976w[0..0] & (! w_data677w[0..0])), w_anode966w[2..2]);
	w_anode987w[] = ( (w_anode987w[2..2] & (! w_data677w[2..2])), (w_anode987w[1..1] & (! w_data677w[1..1])), (w_anode987w[0..0] & w_data677w[0..0]), w_anode966w[2..2]);
	w_anode997w[] = ( (w_anode997w[2..2] & (! w_data677w[2..2])), (w_anode997w[1..1] & w_data677w[1..1]), (w_anode997w[0..0] & (! w_data677w[0..0])), w_anode966w[2..2]);
	w_data677w[2..0] = data_wire[2..0];
END;
--VALID FILE
